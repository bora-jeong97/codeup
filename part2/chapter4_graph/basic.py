'''
그래프는 주어지는 import가 없음
인접행렬 vs 인접리스트

인접행렬은 무조건 N제곱의 공간을 쓴다. 시간적으로는 유리 위치를 바로 찾음.
인접리스트는 간선이 적을 수록 유리

인접행렬이 메모리는 크게 차지하지만 시간적으로 유리
인접리스트는 간선개수가 적을 때 유리


30. Chapter 4. DFS, BFS, 백트래킹 - DFS vs BFS
DFS & BFS
공통점
완전탐색 모든 경우의 수를 다 찾아볼 수 있으나 느리다

차이점
BFS는 목표노드를 만나면 그대로 종료
DFS는 목표노드를 만나도 그게 정답인지 보장할 수 없음.
=> 최단거리탐색 문제인경우 BFS를 권장함.


인접행렬 vs 인접리스트
인접행렬 O(V제곱)
인접리스트 O(V+E)  , 거의 노드와 간선중 가장 큰 수와 비슷하다 O(MAX(V,E))


'''

''' 우리 자기 도움 ❤
'''
# queue
# 삽입 O(1), 삭제 O(1) 인데
# list로 구현하면 망함.

queue = []

# 첫 구현
# [1, 2] <- 뒤로 넣음
queue.append(1)
queue.append(2)
queue.pop(0) # O(N)

# 다음 구현
# 앞으로 넣기 -> [1, 2]
# 딱 봐도 멍청한 생각임

queue.insert(0, 1)
queue.insert(0, 2) # O(N)
queue.pop() # O(1)
